#include <stdio.h>
int max(int a, int b) {
 return (a > b) ? a : b;
}
int knapsack(int max_weight, int weights[], int values[], int num_items) {
 int dp[num_items + 1][max_weight + 1];
 for (int i = 0; i <= num_items; i++) {
 for (int w = 0; w <= max_weight; w++) {
 if (i == 0 || w == 0)
 dp[i][w] = 0;
 else if (weights[i - 1] <= w)
 dp[i][w] = max(values[i - 1] + dp[i - 1][w - weights[i - 1]], dp[i - 1][w]);
 else
 dp[i][w] = dp[i - 1][w];
 }
 }
 return dp[num_items][max_weight];
}
int main() {
 int num_items;
 printf("Enter the number of items: ");
 scanf("%d", &num_items);
 int weights[num_items];
 int values[num_items];
 printf("Enter the weight and value of each item:\n");
 for (int i = 0; i < num_items; i++) {
 printf("Item %d:\n", i + 1);
 scanf("%d", &weights[i]);
 scanf("%d", &values[i]);
 }
 int max_weight;
 printf("Enter the maximum weight: ");
 scanf("%d", &max_weight);
 int max_value = knapsack(max_weight, weights, values, num_items);
 printf("Maximum value: %d\n", max_value);
 return 0;
}