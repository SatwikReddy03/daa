#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
 
// Structure to represent a node in the binary tree
typedef struct Node {
    int data;
    struct Node* left;
    struct Node* right;
} Node;
 
// Function to create a new node
Node* createNode(int data) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}
 
// Function to perform iterative Inorder traversal
void inorderIterative(Node* root) {
    if (root == NULL)
        return;
 
    Node* stack[100];
    int top = -1;
    Node* current = root;
 
    while (true) {
        while (current != NULL) {
            stack[++top] = current;
            current = current->left;
        }
 
        if (top >= 0) {
            current = stack[top--];
            printf("%d ", current->data);
            current = current->right;
        }
        else
            break;
    }
}
 
int main() {
    // Create a binary tree
    Node* root = createNode(1);
    root->left = createNode(2);
    root->right = createNode(3);
    root->left->left = createNode(4);
    root->left->right = createNode(5);
 
    printf("Inorder Traversal: ");
    inorderIterative(root);
    printf("\n");
 
    return 0;
}
