#include <stdio.h>
#include <stdbool.h>

#define TABLE_SIZE 13

// Function to compute the first hash
int hash1(int key) {
    return key % TABLE_SIZE;
}

// Function to compute the second hash
int hash2(int key) {
    return 1 + (key % (TABLE_SIZE - 1));
}

// Function to insert a key into the hash table
void insert(int hashTable[], int key) {
    int index = hash1(key);

    if (hashTable[index] == -1) {
        hashTable[index] = key;
    } else {
        int step = hash2(key);
        int i = 1;

        while (true) {
            int newIndex = (index + i * step) % TABLE_SIZE;

            if (hashTable[newIndex] == -1) {
                hashTable[newIndex] = key;
                return;
            }

            i++;
        }
    }
}

// Function to search for a key in the hash table
bool search(int hashTable[], int key) {
    int index = hash1(key);

    if (hashTable[index] == key) {
        return true;
    } else {
        int step = hash2(key);
        int i = 1;

        while (hashTable[(index + i * step) % TABLE_SIZE] != -1) {
            if (hashTable[(index + i * step) % TABLE_SIZE] == key) {
                return true;
            }

            i++;
        }

        return false;
    }
}

// Function to print the hash table
void display(int hashTable[]) {
    printf("Hash Table: ");
    for (int i = 0; i < TABLE_SIZE; i++) {
        if (hashTable[i] == -1) {
            printf("N ");
        } else {
            printf("%d ", hashTable[i]);
        }
    }
    printf("\n");
}

int main() {
    int hashTable[TABLE_SIZE];
    for (int i = 0; i < TABLE_SIZE; i++) {
        hashTable[i] = -1;
    }

    int keys[] = {15, 22, 35, 9, 2, 37, 4, 11, 26};

    for (int i = 0; i < sizeof(keys) / sizeof(keys[0]); i++) {
        insert(hashTable, keys[i]);
    }

    display(hashTable);

    int searchKey = 11;
    if (search(hashTable, searchKey)) {
        printf("%d is found in the hash table.\n", searchKey);
    } else {
        printf("%d is not found in the hash table.\n", searchKey);
    }

    return 0;
}
