#include <stdio.h>


void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}


void heapify(int arr[], int size, int root) {
    int largest = root; // Initialize largest as root
    int left = 2 * root + 1; // Left child
    int right = 2 * root + 2; // Right child


    if (left < size && arr[left] > arr[largest])
        largest = left;

    
    if (right < size && arr[right] > arr[largest])
        largest = right;

    
    if (largest != root) {
        swap(&arr[root], &arr[largest]);


        heapify(arr, size, largest);
    }
}


void heapSort(int arr[], int size) {
    
    for (int i = size / 2 - 1; i >= 0; i--)
        heapify(arr, size, i);

    
    for (int i = size - 1; i >= 0; i--) {
        
        swap(&arr[0], &arr[i]);


        heapify(arr, i, 0);
    }
}


void printArray(int arr[], int size) {
    for (int i = 0; i < size; i++)
        printf("%d ", arr[i]);
    printf("\n");
}

int main() {
    int arr[] = {12, 11, 13, 5, 6, 7};
    int size = sizeof(arr) / sizeof(arr[0]);

    printf("Array before sorting:\n");
    printArray(arr, size);

    heapSort(arr, size);

    printf("Array after sorting using Heap Sort:\n");
    printArray(arr, size);

    return 0;
}
