#include <stdio.h>
#include <stdbool.h>
#define MAX_SIZE 100
bool subsetSum(int set[], int n, int sum) {
 bool dp[MAX_SIZE + 1][MAX_SIZE + 1];
 for (int i = 0; i <= n; i++) {
 dp[i][0] = true;
 }
 for (int j = 1; j <= sum; j++) {
 dp[0][j] = false;
 }
 for (int i = 1; i <= n; i++) {
 for (int j = 1; j <= sum; j++) {
 if (set[i - 1] > j) {
 dp[i][j] = dp[i - 1][j];
 }
 else {
 dp[i][j] = dp[i - 1][j] || dp[i - 1][j - set[i - 1]];
 }
 }
 }
 return dp[n][sum];
}
int main() {
 int n;
 printf("Enter the number of elements in the set: ");
 scanf("%d", &n);
 int set[n];
 printf("Enter the elements of the set:\n");
 for (int i = 0; i < n; i++) {
 scanf("%d", &set[i]);
 }
 int sum;
 printf("Enter the target sum: ");
 scanf("%d", &sum);
 bool exists = subsetSum(set, n, sum);
 if (exists) {
 printf("Subset with the given sum exists.\n");
 } else {
 printf("No subset with the given sum exists.\n");
 }
 return 0;
}