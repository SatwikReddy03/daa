#include <stdio.h>
#include <stdlib.h>

#define MAX_NODES 100

int visited[MAX_NODES];
int stack[MAX_NODES];
int top = -1;

void depthFirstSearch(int graph[MAX_NODES][MAX_NODES], int node, int numNodes) {
    visited[node] = 1;

    for (int i = 0; i < numNodes; i++) {
        if (graph[node][i] && !visited[i]) {
            depthFirstSearch(graph, i, numNodes);
        }
    }

    stack[++top] = node;
}

void topologicalSort(int graph[MAX_NODES][MAX_NODES], int numNodes) {
    for (int i = 0; i < numNodes; i++) {
        visited[i] = 0;
    }

    for (int i = 0; i < numNodes; i++) {
        if (!visited[i]) {
            depthFirstSearch(graph, i, numNodes);
        }
    }

    printf("Topological Sorting: ");
    while (top >= 0) {
        printf("%d ", stack[top--]);
    }
    printf("\n");
}

int main() {
    int numNodes, numEdges;
    printf("Enter the number of nodes and edges: ");
    scanf("%d %d", &numNodes, &numEdges);

    int graph[MAX_NODES][MAX_NODES] = {0};

    printf("Enter the edges (node1 node2):\n");
    for (int i = 0; i < numEdges; i++) {
        int node1, node2;
        scanf("%d %d", &node1, &node2);
        graph[node1][node2] = 1;
    }

    topologicalSort(graph, numNodes);

    return 0;
}
